# Generated by Django 4.2.1 on 2025-07-12 03:41

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('factory_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('active', 'active'), ('inactive', 'inactive')], default='active', max_length=255)),
                ('capacity', models.IntegerField(default=0)),
                ('memo', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(blank=True, help_text='画像', null=True, upload_to='inventory_images/')),
                ('item_code', models.CharField(help_text='商品コード', max_length=255, unique=True)),
                ('product_name', models.CharField(help_text='商品名', max_length=255)),
                ('standard', models.CharField(blank=True, help_text='規格', max_length=255, null=True)),
                ('category', models.CharField(help_text='カテゴリ', max_length=255)),
                ('stock_quantity', models.IntegerField(default=0, help_text='在庫数')),
                ('lowest_stock', models.IntegerField(default=0, help_text='最低在庫数')),
                ('unit', models.CharField(help_text='単位', max_length=255)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0.0, help_text='単価', max_digits=10)),
                ('storing_place', models.CharField(blank=True, help_text='保管場所', max_length=255, null=True)),
                ('memo', models.TextField(blank=True, help_text='メモ', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='更新日時')),
                ('factory', models.ForeignKey(help_text='所属工場', on_delete=django.db.models.deletion.CASCADE, to='api.factory')),
            ],
        ),
        migrations.CreateModel(
            name='Stocktaking',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('theoretical_stock', models.IntegerField(default=0)),
                ('actual_stock', models.IntegerField(default=0)),
                ('difference', models.IntegerField(default=0)),
                ('status', models.CharField(max_length=255)),
                ('memo', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.inventory')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('movement_type', models.CharField(choices=[('in', 'in'), ('out', 'out')], default='in', max_length=255)),
                ('quantity', models.IntegerField(default=0)),
                ('reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('factory_id', models.ForeignKey(help_text='対象工場', on_delete=django.db.models.deletion.CASCADE, to='api.factory')),
                ('item_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.inventory')),
                ('user_id', models.ForeignKey(help_text='実行者', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='factories',
            field=models.ManyToManyField(blank=True, help_text='管理する工場', to='api.factory'),
        ),
        migrations.AddField(
            model_name='account',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='account',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
